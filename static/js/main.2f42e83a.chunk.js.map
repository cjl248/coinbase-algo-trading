{"version":3,"sources":["components/MainTitle.jsx","components/MenuOption.jsx","components/MenuOptionsContainer.jsx","components/SideMenuContainer.jsx","components/MainNavBar.jsx","components/Loading.jsx","components/Main/Home/Orders.jsx","components/Main/Home/Assets.jsx","components/Main/Home/Signals.jsx","components/Main/Home.jsx","components/Main/Portfolio.jsx","components/Main/Prices.jsx","components/Main/Algorithms/Bands.jsx","components/Main/Algorithms/Fibonacci.jsx","components/Main/Algorithms/MovingAverages.jsx","components/Main/Algorithms.jsx","components/Modal/Toggle.jsx","components/Modal/MarketOrder.jsx","components/Modal/LimitOrder.jsx","components/Modal.jsx","components/MainContainer.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MainTitle","className","MenuOption","title","icon","activePage","setActivePage","onClick","toUpperCase","slice","menuItems","renderMenuItems","Object","keys","map","item","index","MenuOptionsContainer","SideMenuContainer","MainNavBar","activateModal","Button","color","variant","Loading","oAPI","Orders","orders","setOrders","React","useState","requestedOrders","setRequestedOrders","AbortController","controller","precise","float","precision","Number","parseFloat","toPrecision","getOrders","a","config","method","headers","signal","length","fetch","json","then","data","name","console","warn","log","handleOrderDelete","orderId","filteredOrders","filter","order","id","useEffect","abort","product_id","type","side","price","size","style","width","height","Assets","accounts","prices","dollarBalance","calculatePortfolioBalance","dollarcoinBalance","dollarValues","getDollarValue","setDollarValues","sum","setSum","myComponents","key","cryptoPrice","crypto","find","entry","currency","balance","account","Signals","aAPI","pAPI","Home","state","getAccounts","setState","requestPath","r","catch","error","this","props","Component","websocketAPI","Portfolio","socket","WebSocket","dollarValue","dollarCoinValue","totalValue","getProductIds","activeAccounts","setDollarAccounts","renderInvested","percentage","getPortfolioPercentage","getTotalValue","reduce","current","currentPrice","currentBalance","product","totalvalue","onopen","subscribe","send","JSON","stringify","onmessage","message","response","parse","e","onerror","onclose","close","productListAPI","Prices","productList","sortedPrices","sorting","getAllProducts","renderPrices","Array","isArray","handleGetSorted","sortBy","priceArray","push","sorted","sort","b","handleGetUnsorted","resolveSort","ws","Bands","renderBands","bands","level","stats","handleGranularityChange","granularity","setGranularity","Fibonacci","fibonacci","activeFibonacciCurrency","setActiveFibonacciCurrency","p","FormControl","InputLabel","Select","labelId","value","onChange","target","label","MenuItem","day_stats","high","last","low","historical_stats","max","middle","min","fibBreakPoints","belowHigh","aboveLow","renderBelowHighIndicators","bp","n2","renderAboveLowIndicators","renderCombinedStats","MovingAverages","Algorithms","fibonacciRetracement","getFibonacciRetracement","productId","getBands","getAllBands","scrollPage","activeSection","bollRef","scrollIntoView","behavior","block","fibRef","avgRef","createRef","ref","prevProps","prevState","Toggle","buy","toggleBuy","marketOrder","toggleMarketOrder","setMessage","Typography","component","Grid","container","alignItems","spacing","Switch","checked","MarketOrder","modal","action","market","allAccounts","setProductId","funds","setFunds","intendToOrder","setIntendToOrder","pin","setPin","handleOrder","body","handlePinInput","display","flexDirection","margin","TextField","Math","sign","toString","includes","isNaN","marginTop","Input","LimitOrder","setSize","setPrice","resolveSide","newOrder","Modal","setAllAccounts","MainContainer","setModal","setActiveAccounts","renderActivePage","App","page","section","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f42e83a.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function MainTitle() {\n\n  return (\n    <div className='main-title'>\n      {`portfoliobase`}\n    </div>\n  )\n\n}\n","import React from 'react'\n\nexport default function MenuOption({title, icon, activePage, setActivePage}) {\n\n  const determineClass = () => {\n    return activePage === title ? 'active-menu-option' : 'menu-option'\n  }\n\n  const formatText = () => title[0].toUpperCase()+title.slice(1)\n\n  const renderItem = () => {\n    return (\n      <>\n        <span className='item-icon'>{icon}</span>\n        <span className='item-text'>{formatText()}</span>\n      </>\n    )\n  }\n\n  const handleClick = () => {\n    setActivePage(title, 'h')\n  }\n\n\n  return (\n    <div\n      className={determineClass()}\n      onClick={handleClick}>\n      {renderItem()}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport MenuOption from './MenuOption.jsx'\n\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport PieChartRoundedIcon from '@material-ui/icons/PieChartRounded';\nimport ShowChartRoundedIcon from '@material-ui/icons/ShowChartRounded';\nimport FunctionsRoundedIcon from '@material-ui/icons/FunctionsRounded';\n\nconst menuItems = {\n  'home': <HomeRoundedIcon />,\n  'portfolio': <PieChartRoundedIcon />,\n  'prices': <ShowChartRoundedIcon />,\n  'algorithms': <FunctionsRoundedIcon />\n}\n\nconst renderMenuItems = (activePage, setActivePage) => {\n  return Object.keys(menuItems).map((item, index) => {\n    return (\n      <MenuOption\n        key={index}\n        title={item}\n        icon={menuItems[item]}\n        activePage={activePage}\n        setActivePage={setActivePage}>\n      </MenuOption>\n    )\n  })\n}\n\nexport default function MenuOptionsContainer({activePage, setActivePage}) {\n  return (\n    <div className='menu-options-container'>\n      {renderMenuItems(activePage, setActivePage)}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport MainTitle from './MainTitle.jsx'\nimport MenuOptionsContainer from './MenuOptionsContainer.jsx'\n\nexport default function SideMenuContainer({activePage, setActivePage}) {\n\n  return (\n    <div className='side-menu-container'>\n      <MainTitle></MainTitle>\n      <MenuOptionsContainer\n        activePage={activePage}\n        setActivePage={setActivePage}>\n      </MenuOptionsContainer>\n    </div>\n  )\n\n}\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\n\nexport default function MainNavBar({activePage, activateModal}) {\n\n  const formatText = () => activePage[0].toUpperCase()+activePage.slice(1)\n\n  const handleOrder = () => activateModal()\n\n  return (\n    <div className='main-navbar'>\n      <div\n        className='navbar-active-page'>\n        {formatText()}\n      </div>\n      <div className='navbar-middle-placeholder'></div>\n      <div className='navbar-buttons'>\n        <Button\n          color='primary'\n          variant='contained'\n          onClick={handleOrder}>\n          {`BUY / SELL`}\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Loading() {\n  return(\n    <h3 className='loading'>\n      {`Loading...`}\n    </h3>\n  )\n}\n","import React from 'react'\nimport Loading from '../../Loading.jsx'\nimport Button from '@material-ui/core/Button'\n\nconst oAPI = 'https://coinbase-algo-backend.herokuapp.com/c_orders'\n\nexport default function Orders({ orders, setOrders }) {\n\n  const [requestedOrders, setRequestedOrders] = React.useState(false)\n  const [controller] = React.useState(new AbortController())\n\n  const precise = (float, precision) => Number.parseFloat(float).toPrecision(precision)\n\n  const getOrders = async () => {\n    const config = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      signal: controller.signal\n    }\n    if (orders.length === 0) {\n      try {\n        if (requestedOrders) {\n          return null\n        } else {\n          const response = await fetch(oAPI, config)\n          response.json().then(data => {\n            setRequestedOrders(true)\n            return setOrders(data)\n          })\n        }\n      } catch(e) {\n        if (e.name === \"AbortError\") {\n          console.warn(\"Orders fetch aborted!\")\n        } else {\n          console.log(`Error: ${e}`);\n        }\n      }\n    }\n  }\n\n  const handleOrderDelete = async (orderId) => {\n    const config = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json'\n      }\n    }\n    const response =  await fetch(`${oAPI}/${orderId}`, config)\n    response.json().then(() => {\n      const filteredOrders = orders.filter(order => {\n        return order.id !== orderId\n      })\n      setOrders(filteredOrders)\n    })\n\n  }\n\n  const renderOrders = () => {\n    if (orders.length === 0) {\n      if (requestedOrders) {\n        return (<h3>{`You have no orders...`}</h3>)\n      } else {\n        return (<Loading />)\n      }\n    } else if (orders.length > 0) {\n      return orders.map(order => {\n        return (\n          <div key={order.id} className='order'>\n            <div>{order.product_id}</div>\n            <div>{order.type.toUpperCase()}</div>\n            <div>{order.side.toUpperCase()}</div>\n            <div>{precise(order.price, 6)}</div>\n            <div>{precise(order.size, 4)}</div>\n            <Button style={{width: '5%', height: '25px'}}\n              color='secondary'\n              variant='contained'\n              onClick={()=> {handleOrderDelete(order.id)}}>\n              {`X`}\n            </Button>\n          </div>\n        )\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    if (orders.length === 0 ) {\n      getOrders()\n    }\n    return function cleanup() {\n      if (orders.length > 0) {\n        controller.abort()\n      }\n    }\n  })\n\n  return (\n    <div className='orders-container'>\n      <div className='orders-title'>{`Orders`}</div>\n      <div className='orders-headers'>\n        <div>{`Product`}</div>\n        <div>{`Type`}</div>\n        <div>{`Side`}</div>\n        <div>{`Price`}</div>\n        <div>{`Size`}</div>\n        <div>{`Cancel`}</div>\n      </div>\n      <div className='orders'>{renderOrders()}</div>\n    </div>\n  )\n\n}\n","import React from 'react'\n\nimport CheckCircleOutlinedIcon from '@material-ui/icons/CheckCircleOutlined';\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\n\nimport Loading from '../../Loading.jsx'\n\nexport default function Assets({ accounts, prices, calculatePortfolioBalance, dollarBalance, dollarcoinBalance }) {\n\n  React.useEffect(() => {\n    if (dollarValues.length <= prices.length - 1) {\n      getDollarValue()\n    }\n  })\n\n  const [dollarValues, setDollarValues] = React.useState([])\n  const [sum, setSum] = React.useState(0)\n\n  const precise = float => Number.parseFloat(float).toPrecision(6)\n\n  const getDollarValue = () => {\n    if (prices) {\n      let sum = 0\n      const myComponents = prices.map(price => {\n        for (let key in price){\n          const cryptoPrice = price[key]\n          const crypto = accounts.find((entry) => {\n            return entry.currency === cryptoPrice.currency\n          })\n          if (crypto) {\n            sum += cryptoPrice.price*crypto.balance\n            setDollarValues([...dollarValues, {[crypto.currency] :precise(cryptoPrice.price*crypto.balance)}])\n          }\n        }\n        return 0\n      })\n      setSum(sum)\n      return myComponents\n    } else return (<Loading></Loading>)\n  }\n\n  const renderAssets = () => {\n    if (accounts) {\n      return accounts.map((account, index) => {\n        return (\n          <div className='asset' key ={index} >\n            <span className='icon-currency-group'>\n              <CheckCircleOutlinedIcon />\n              <span className='currency'>{account.currency}</span>\n            </span>\n            <span className='balance'>{account.balance}</span>\n          </div>\n        )\n      })\n    } else return (<Loading></Loading>)\n  }\n\n  const renderDollarValues = () => {\n    const withDollarValues = [...dollarValues, {'USD': dollarBalance}, {'USDC': dollarcoinBalance}]\n    return withDollarValues.map((crypto, index) => {\n        for (let key in crypto) {\n          return (\n            <div className='asset' key ={index} >\n              <span className='icon-currency-group'>\n                <MonetizationOnOutlinedIcon />\n                <span className='currency'>{key}</span>\n              </span>\n              <span className='balance'>{`$${precise(crypto[key])}`}</span>\n            </div>\n          )\n        } return null\n    })\n  }\n\n  return (\n    <div className='assets-container'>\n      <div className='assets-title'>\n        {`Assets: $${precise(parseFloat(sum)+parseFloat(dollarBalance)+parseFloat(dollarcoinBalance))}`}\n      </div>\n        <div className='assets'>\n          <div className='asset-section-titles'>{`Dollar Values`}</div>\n          {renderDollarValues()}\n        </div>\n      <div className='assets'>\n        <div className='asset-section-titles'>{`Nominal Values`}</div>\n        {renderAssets()}\n      </div>\n    </div>\n  )\n\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nconst Signals = ({ setActivePage }) => {\n  return (\n    <div className='signals-container'>\n      <div className='signals-title'>{`Algorithms`}</div>\n      <div className='signals-group'>\n        <section className='algo-signal'>\n          <div className='title'>{`Bollinger Bands`}</div>\n          <Button\n            variant='contained'\n            color='primary'\n            className='button'\n            onClick={()=>{setActivePage('algorithms', 'b')}}>\n            {`Go`}\n          </Button>\n        </section>\n        <section className='algo-signal'>\n          <div className='title'>{`Fibonacci Retracement`}</div>\n          <Button\n            variant='contained'\n            color='primary'\n            className='button'\n            onClick={()=>{setActivePage('algorithms', 'f')}}>\n            {`Go`}\n          </Button>\n        </section>\n        {/*\n        <section className='algo-signal'>\n          <div className='title'>{`Moving Averages`}</div>\n          <Button\n            variant='contained'\n            color='primary'\n            className='button'\n            onClick={()=>{setActivePage('algorithms', 'm')}}>\n            {`Go`}\n          </Button>\n        </section>\n        */}\n      </div>\n    </div>\n  )\n\n}\n\nexport default Signals\n","import React from 'react'\n\nimport Orders from './Home/Orders.jsx'\nimport Assets from './Home/Assets.jsx'\nimport Signals from './Home/Signals.jsx'\n\nconst aAPI = 'https://coinbase-algo-backend.herokuapp.com/c_accounts'\nconst pAPI = 'https://coinbase-algo-backend.herokuapp.com/c_products'\n\nexport default class Home extends React.Component {\n\n  precise = float => Number.parseFloat(float).toPrecision(6)\n\n  state = {\n    accounts: [],\n    prices: [],\n    dollarBalance: 0,\n    dollarcoinBalance: 0,\n    controller: new AbortController()\n  }\n\n  getAccounts = async () => {\n    const config = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\",\n      },\n      signal: this.state.controller.signal\n    }\n    try {\n      const response = await fetch(aAPI, config)\n      response.json().then(accounts => {\n        this.setState({\n          accounts\n        }, () => {\n          const config = {\n            method: 'GET',\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accepts\": \"application/json\",\n            },\n            signal: this.state.controller.signal\n          }\n          return this.state.accounts.map(account => {\n            if (account.balance > 0 && account.currency !== 'USD' && account.currency !== 'USDC') {\n              const currency = account.currency\n              const requestPath = `${pAPI}?product=${currency}-USD`\n              fetch(requestPath, config)\n              .then(r => r.json())\n              .then(price => {\n                this.setState({\n                  prices: [...this.state.prices, {[currency]: {'currency': currency, ...price}}],\n                })\n              }).catch(error => {\n                console.warn(`Error: ${error}`)\n              })\n            } else if (account.balance > 0 && account.currency === 'USDC') {\n              this.setState({\n                dollarcoinBalance: account.balance\n              })\n\n            } else if (account.balance > 0 && account.currency === 'USD') {\n              this.setState({\n                dollarBalance: account.balance\n              })\n            }\n            return null\n          })\n        })\n      })\n    } catch(e) {\n      if (e.name === 'AbortError') {\n        console.warn('Accounts fetch aborted.')\n      } else {\n        throw e\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className='home-container'>\n        <Orders\n          accounts={this.state.accounts}\n          orders={this.props.orders}\n          setOrders={this.props.setOrders}>\n        </Orders>\n        <Assets\n          accounts={this.state.accounts}\n          prices={this.state.prices}\n          dollarBalance={this.state.dollarBalance}\n          dollarcoinBalance={this.state.dollarcoinBalance}>\n        </Assets>\n        <Signals\n          setActivePage={this.props.setActivePage}>\n        </Signals>\n        {/*\n        <div className='col2-row2'></div>\n        */}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.getAccounts()\n  }\n\n  componentWillUnmount() {\n    this.state.controller.abort()\n  }\n\n}\n","import React from 'react'\n\nconst websocketAPI = 'wss://ws-feed.pro.coinbase.com'\n\nexport default class Portfolio extends React.Component {\n\n  state = {\n    socket: new WebSocket(websocketAPI),\n    prices: {},\n    dollarValue: 0,\n    dollarCoinValue: 0,\n    totalValue: 0,\n  }\n\n  precise = (float, precision) => Number.parseFloat(float).toPrecision(precision)\n\n  getProductIds = () => {\n    return this.props.activeAccounts.map(account => {\n      if (account.currency !== 'USD' || account.currency !== 'USDC') {\n        return `${account.currency}-USD`\n      } else return null\n    })\n  }\n\n  setDollarAccounts = () => {\n    return this.props.activeAccounts.map(account => {\n      if (account.currency === 'USD') {\n        return this.setState({dollarValue: account.balance})\n      }\n      if (account.currency === 'USDC') {\n        return this.setState({dollarCoinValue: account.balance})\n      }\n      else return null\n    })\n  }\n\n  renderInvested = () => {\n    return this.props.activeAccounts.map((account, index) => {\n      for (let key in this.state.prices) {\n        if (key.slice(0, 3) === account.currency || key.slice(0, 4) === account.currency) {\n          const percentage = this.getPortfolioPercentage(account.balance*this.state.prices[key])\n          return (\n            <div className='p-price' key={index}>\n              <div className='p-currency'>\n                {`${account.currency}: `}\n              </div>\n              <div className='p-value'>\n                {`$${this.precise(account.balance*this.state.prices[key], 5)}`}\n              </div>\n              <div className='p-percentage'>\n                {`${percentage}%`}\n              </div>\n            </div>\n          )\n        }\n      }\n      return null\n    })\n  }\n\n  getTotalValue = () => {\n    const { activeAccounts } = this.props\n    const totalValue = activeAccounts.reduce((sum, current) => {\n      if (current.currency === 'USD' || current.currency === 'USDC') {\n        return sum += Number.parseFloat(current.balance)\n      } else {\n        const currentPrice = this.state.prices[`${current.currency}-USD`]\n        const currentBalance = current.balance\n        const currentValue = Number.parseFloat(currentPrice) * Number.parseFloat(currentBalance)\n        return sum += currentValue\n      }\n    }, 0)\n    this.setState({ totalValue })\n  }\n\n  getPortfolioPercentage = (product) => {\n    if (this.state.totalValue === 0 && product === 0 ) {\n      return 0\n    } else if (this.state.totalvalue === product) {\n      return 100\n    } else if (this.state.totalValue === 0 && product > 0){\n      return 100\n    } else {\n      return this.precise(Number.parseFloat(product) / Number.parseFloat(this.state.totalValue) * 100, 4)\n\n    }\n  }\n\n  componentDidMount() {\n    this.setDollarAccounts()\n\n\n    const { socket } = this.state\n    socket.onopen = () => {\n      const subscribe = {\n        \"type\": \"subscribe\",\n        \"product_ids\": this.getProductIds(),\n        \"channels\": [\n          {\n            \"name\": \"ticker\",\n            \"product_ids\": this.getProductIds()\n          }\n        ]\n      }\n      socket.send(JSON.stringify(subscribe))\n    }\n\n    socket.onmessage = (message) => {\n      try {\n        const response = JSON.parse(message.data);\n        if (response.type === 'ticker'){\n          return this.getProductIds().map(id => {\n            if (response.product_id === id) {\n              this.setState({\n                prices: {...this.state.prices, [id]: response.price}\n              })\n              return this.getTotalValue()\n            } else return null\n          })\n        } else return null\n      } catch (e) {\n        console.log('Not valid JSON: ', JSON.parse(message.data))\n        return\n      }\n    }\n\n    socket.onerror = (error) => {\n      try {\n        console.log(\"There was an error: \", error);\n      } catch (e) {\n        console.log(\"There was an error: \", e);\n        return\n      }\n    }\n\n    socket.onclose = () => {\n      return null\n    }\n\n  }\n\n  render() {\n    return (\n      <div className='portfolio-container'>\n        <div\n          className='portfolio-balance-container'>\n          <div className='p-balance-title'>{`Invested`}</div>\n          <div className='balances'>\n            {this.renderInvested()}\n          </div>\n        </div>\n        <div\n          className='portfolio-assets-container'>\n          <div className='p-assets-title'>{`Available`}</div>\n          <div className='usd-group'>\n            <span className='usd-label'>{`USD: `}</span>\n            <span className='usd-value'>{`$${this.precise(this.state.dollarValue, 5)}`}</span>\n            <span\n              className='percentage'>\n              {`${this.getPortfolioPercentage(this.state.dollarValue)}%`}\n            </span>\n          </div>\n          <div className='usd-group'>\n            <span className='usd-label'>{`USDC: `}</span>\n            <span className='usd-value'>{`$${this.precise(this.state.dollarCoinValue, 2)}`}</span>\n            <span\n              className='percentage'>\n              {`${this.getPortfolioPercentage(this.state.dollarCoinValue)}%`}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  componentWillUnmount() {\n    const { socket } = this.state\n      // const unsubscribe = {\n      //   \"type\": \"unsubscribe\",\n      //   \"product_ids\": this.getProductIds(),\n      //   \"channels\": [ \"ticker\" ]\n      // }\n      // socket.send(JSON.stringify(unsubscribe))\n      socket.close()\n  }\n\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nconst productListAPI = 'https://coinbase-algo-backend.herokuapp.com/c_products/list'\nconst websocketAPI = 'wss://ws-feed.pro.coinbase.com'\n\nexport default class Prices extends React.Component {\n\n  state = {\n    socket: new WebSocket(websocketAPI),\n    controller: new AbortController(),\n    productList: [],\n    prices: {},\n    sortedPrices: [],\n    sorting: false,\n  }\n\n  precise = (float, precision) => Number.parseFloat(float).toPrecision(precision)\n\n  getAllProducts = async () => {\n    const config = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json'\n      },\n      signal: this.state.controller.signal\n    }\n    const response = await fetch(productListAPI, config)\n    response.json().then(data => {\n      const productList = data.map(product => {\n        return product.id\n      })\n      this.setState({\n        productList\n      })\n    })\n  }\n\n  getProductIds = () => {\n    const { activeAccounts } = this.props\n    return activeAccounts.map(account => {\n      return `${account.currency}-USD`\n    })\n  }\n\n  renderPrices = (data) => {\n    const { prices } = this.state\n    if (Array.isArray(data)) {\n      return data.map((crypto, index) => {\n        return (\n          <div className='price' key={index}>\n            <span\n              className='currency'>\n              {`${crypto.name}: `}\n            </span>\n            <span\n              className='exchange'>\n              {`$${this.precise(crypto.price, 7)}`|| 0}\n            </span>\n          </div>\n        )\n      })\n    } else {\n      return Object.keys(prices).map((crypto, index)=> {\n        return (\n          <div className='price' key={index}>\n            <span\n              className='currency'>\n              {`${crypto}: `}\n            </span>\n            <span\n              className='exchange'>\n              {`$${this.precise(prices[crypto], 7)}`|| 0}\n            </span>\n          </div>\n        )\n      })\n    }\n  }\n\n  handleGetSorted = (sortBy) => {\n    this.setState({sorting: true}, () => {\n      const { prices } = this.state\n      const priceArray = []\n      for (let product in prices) {\n        priceArray.push({\n          name: product,\n          price: prices[product],\n        })\n      }\n      let sorted = []\n      if (sortBy === 'DESC') {\n        sorted = priceArray.sort((a, b) => b.price - a.price)\n      }\n      if (sortBy === 'ASC') {\n        sorted = priceArray.sort((a, b) => a.price - b.price)\n      }\n      this.setState({\n        sortedPrices: sorted\n      })\n    })\n  }\n\n  handleGetUnsorted = () => {\n    this.setState({sorting: false})\n  }\n\n  resolveSort = () => {\n    if (this.state.sorting) {\n      return this.renderPrices(this.state.sortedPrices)\n    } else {\n      return this.renderPrices(this.state.prices)\n    }\n  }\n\n  render() {\n    return (\n      <div className='prices-container'>\n        <span className='header-container'>\n          <div className='prices-header'>{`Live Cryptocurrency Prices`}</div>\n          <span className='prices-button-group'>\n            <section className='sort-section'>\n              <span className='sort-label'>{`Sort By Price: `}</span>\n              <Button className='sort-button'\n                color='primary'\n                variant='contained'\n                onClick={() => {this.handleGetSorted('ASC')}}>\n                {`Ascending`}\n              </Button>\n              <Button className='sort-button'\n                color='primary'\n                variant='contained'\n                onClick={() => {this.handleGetSorted('DESC')}}>\n                {`Descending`}\n              </Button>\n            </section>\n            <section className='live-group'>\n              <span className='sort-label'>{`Live Feed: `}</span>\n              <Button className='sort-button'\n                color='secondary'\n                variant='contained'\n                onClick={this.handleGetUnsorted}>\n                {`Go Live`}\n              </Button>\n            </section>\n          </span>\n        </span>\n        <div className='prices'>\n          {this.resolveSort()}\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    this.getAllProducts().then(()=> {\n      const ws = new WebSocket(websocketAPI)\n      this.setState({socket: ws}, () => {\n\n        // eslint-disable-next-line\n        this.state.socket.onopen = () => {\n          const subscribe = {\n            \"type\": \"subscribe\",\n            \"product_ids\": this.state.productList,\n            \"channels\": [\n              {\n                \"name\": \"ticker\",\n                \"product_ids\": this.state.productList\n              }\n            ]\n          }\n          this.state.socket.send(JSON.stringify(subscribe))\n        }\n\n        // eslint-disable-next-line\n        this.state.socket.onmessage = (message) => {\n          try {\n            const response = JSON.parse(message.data)\n            if (response.type === 'ticker'){\n              return this.state.productList.map(id => {\n                if (response.product_id === id) {\n                  this.setState({\n                    prices: {...this.state.prices, [id]: response.price}\n                  })\n                }\n                return 0\n              })\n            }\n          } catch (e) {\n            console.log('Not valid JSON: ', message.data);\n            return null\n          }\n        }\n\n        // eslint-disable-next-line\n        this.state.socket.onerror = (error) => {\n          console.warn(\"There was an error: \", error);\n        }\n      })\n    }).catch(e => {\n      console.warn(`Error: ${e}`)\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.socket.close()\n    this.state.controller.abort()\n  }\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nexport default class Bands extends React.Component {\n\n  precise = (float) => Number.parseFloat(float).toPrecision(5)\n\n  renderBands = () => {\n    const { bands } = this.props\n    return Object.keys(bands).map(currency => {\n      if (currency !== 'USDC-USD' && currency !== 'USD-USD') {\n        return Object.keys(bands[currency]).map((level, index) => {\n          const stats = bands[currency][level]\n          return (\n            <div className='b-currency' key={index}>\n              <div className='b-currency-title'>{`Currency: ${currency}`}</div>\n              <div className='b-level'>\n                <div className='level-title'>{`Standard Deviation: ${level}`}</div>\n                <div className='b-level'>{`-1 STD: $${this.precise(stats[0])}`}</div>\n                <div className='b-level'>{`Mean: $${this.precise(stats[1])}`}</div>\n                <div className='b-level'>{`+1 STD: $${this.precise(stats[2])}`}</div>\n              </div>\n            </div>\n          )\n        })\n      } else return null\n    })\n  }\n\n  handleGranularityChange = (granularity) => {\n    this.props.setGranularity(granularity)\n  }\n\n  render() {\n    return (\n      <>\n      <div className=\"bands-main-title-section\">\n        <div className='title'>{`Bollinger Bands`}</div>\n        <div className='granularity-options'>\n          <div\n            className='current-granularity'>\n            {`Granularity: ${(this.props.granularity*300/60/60/24)} D`}\n          </div>\n          <Button style={{height: '30px'}}\n            color='primary'\n            variant='contained'\n            onClick={()=>{this.handleGranularityChange(3600)}}>\n            {`12.5 Days`}\n          </Button>\n          <Button style={{height: '30px'}}\n            color='primary'\n            variant='contained'\n            onClick={() => {this.handleGranularityChange(21600)}}>\n            {`75 Days`}\n          </Button>\n          <Button style={{height: '30px'}}\n            color='primary'\n            variant='contained'\n            onClick={() => {this.handleGranularityChange(86400)}}>\n            {`300 Days`}\n          </Button>\n        </div>\n      </div>\n      <div className='bands-container'>\n        {this.renderBands()}\n      </div>\n      </>\n    )\n  }\n\n  componentDidMount() {\n  }\n\n  componentDidUpdate() {\n  }\n\n}\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nexport default function Fibonacci({ fibonacci, activeAccounts, activeFibonacciCurrency, setActiveFibonacciCurrency }) {\n\n  const precision = (float, p) => Number.parseFloat(float).toPrecision(p)\n\n  const subtract = (n1, n2) => {\n    return parseFloat(n1)-parseFloat(n2)\n  }\n  const add = (n1, n2) => {\n    return parseFloat(n1)+parseFloat(n2)\n  }\n\n  // const getProductIds = () => {\n  //   return activeAccounts.map(account => {\n  //     return `${account.currency}-USD`\n  //   })\n  // }\n\n  const renderMenuItems =  () => {\n    return activeAccounts.map((account, index) => {\n      if (account.currency !== 'USDC' && account.currency !== 'USD') {\n        return (\n          <MenuItem key={index}\n            value={`${account.currency}-USD`}>\n            {account.currency}\n          </MenuItem>\n        )\n      } else return null\n    })\n  }\n\n  const handleChange = (e) => setActiveFibonacciCurrency(e.target.value)\n\n  // Renders high, last, low stats for the day\n  const renderDayStats = () => {\n    if (fibonacci && fibonacci.day_stats) {\n      return (\n        <section>\n          <div className='high' key='high'>\n            <span className='label'>{`High: `}</span>\n            <span className='stat'>{`$${precision(fibonacci.day_stats.high, 7)}`}</span>\n          </div>\n          <div className='current' key='current'>\n            <span className='label'>{`Current: `}</span>\n            <span className='stat'>{`$${precision(fibonacci.day_stats.last, 7)}`}</span>\n          </div>\n          <div className='low' key='low'>\n            <span className='label'>{`Low: `}</span>\n            <span className='stat'>{`$${precision(fibonacci.day_stats.low, 7)}`}</span>\n          </div>\n        </section>\n      )\n    } else {\n      return <h1>{`Loading day stats...`}</h1>\n    }\n  }\n\n  // Renders historical max, mean and min of current time window\n  const renderHistoricalStates = () => {\n    if (fibonacci && fibonacci.historical_stats) {\n      return (\n        <section>\n          <div className='max' key='max'>\n            <span className='label'>{`Max: `}</span>\n            <span className='stat'>{`$${precision(fibonacci.historical_stats.max, 7)}`}</span>\n          </div>\n          <div className='mean' key='mean'>\n            <span className='label'>{`Mean: `}</span>\n            <span className='stat'>{`$${precision(fibonacci.historical_stats.middle, 7)}`}</span>\n          </div>\n          <div className='min' key='min'>\n            <span className='label'>{`Min: `}</span>\n            <span className='stat'>{`$${precision(fibonacci.historical_stats.min, 7)}`}</span>\n          </div>\n        </section>\n      )\n    }\n    return <h1>{`Loading historical stats...`}</h1>\n  }\n\n  /**\n  * Fibonacci retracement levels are 23.6%, 38.2%, 61.8%, and 78.6%.\n  * Calculates the retracement up after a fall from max and a\n  * retracement down after a rise up\n  */\n  const renderCombinedStats = () => {\n    if (fibonacci && fibonacci.historical_stats && fibonacci.day_stats) {\n      const fibBreakPoints = [23.6, 38.2, 61.8, 78.6]\n      const { max, min } = fibonacci.historical_stats\n      const { high, last, low } = fibonacci.day_stats\n\n      const belowHigh = max-low\n      const aboveLow = high-min\n\n      const renderBelowHighIndicators = fibBreakPoints.map((bp, index) => {\n        const fibonacci = .01*bp*belowHigh\n        const sum = add(last, fibonacci)\n        return (\n          <li className='breakpoint' key={index}>\n            <span className='label'>{`${bp}%: `}</span>\n            <span className='stat'>{` $${precision(sum, 7)}`}</span>\n          </li>\n        )\n      })\n      const renderAboveLowIndicators = fibBreakPoints.map((bp, index) => {\n        const fibonacci = .01*bp*aboveLow\n        const sum = subtract(last, fibonacci)\n        return (\n          <li className='breakpoint' key={index}>\n            <span className='label'>{`${bp}%: `}</span>\n            <span className='stat'>{` $${precision(sum, 7)}`}</span>\n          </li>\n        )\n      })\n      return (\n        <section className='combined-stats'>\n          <p>\n            {`Today's LOW is below the historical MAX by $${precision(belowHigh, 6)}. Fibonacci breakpoints on a bounce up are at: `}\n          </p>\n          <ul className='below-high'>{renderBelowHighIndicators}</ul>\n          <p>\n            {`Today's HIGH is above the historical MIN by $${precision(aboveLow, 6)}. Fibonacci breakpoints on a drop down are at:`}\n          </p>\n          <ul className='above-high'>{renderAboveLowIndicators}</ul>\n\n        </section>\n      )\n    } return <h1>{`Loading combined stats...`}</h1>\n  }\n\n  return (\n    <>\n    <div className='fibonacci-header'>\n      <div className='fibonacci-main-title'>{`Fibonacci Retracement`}</div>\n      <FormControl variant=\"outlined\" style={{width: '200px'}}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">{`Currency`}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={activeFibonacciCurrency}\n          onChange={handleChange}\n          label=\"Age\">\n          {renderMenuItems()}\n        </Select>\n      </FormControl>\n    </div>\n    <div className='fibonacci-container'>\n      <h2>{`Statistics`}</h2>\n      <section className='fibonacci-stats'>\n        <div className='day-stats' key='day'>\n          <h3>{`Day Stats`}</h3>\n          {renderDayStats()}\n        </div>\n        <div className='historical-stats' key='historical'>\n          <h3>{`Historical Stats`}</h3>\n          {renderHistoricalStates()}\n        </div>\n        </section>\n        <section className='combined-stats-container'>\n          <h2>{`Fibonacci Breakpoints`}</h2>\n          {renderCombinedStats()}\n        </section>\n    </div>\n    </>\n  )\n\n\n}\n","import React from 'react'\n\nexport default function MovingAverages() {\n  return (\n    <div className=''>\n      <div className='moving-averages-header'>\n        <div className='moving-averages-title'>{`Moving Averages`}</div>\n      </div>\n      <h3 className='moving-averages-main'>\n        {`Coming soon...`}\n      </h3>\n    </div>\n  )\n}\n","import React from 'react'\nimport Bands from './Algorithms/Bands.jsx'\nimport Fibonacci from './Algorithms/Fibonacci.jsx'\nimport MovingAverages from './Algorithms/MovingAverages.jsx'\n\nconst pAPI = 'https://coinbase-algo-backend.herokuapp.com/c_products'\nconst websocketAPI = 'wss://ws-feed.pro.coinbase.com'\n\n\nexport default class Algorithms extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.bollRef = React.createRef()\n    this.fibRef = React.createRef()\n    this.avgRef = React.createRef()\n  }\n\n  state = {\n    socket: new WebSocket(websocketAPI),\n    controller: new AbortController(),\n    prices: {},\n    bands: {},\n    granularity: 3600,\n    fibonacciRetracement: {},\n    activeFibonacciCurrency: 'BTC-USD'\n  }\n\n  setActiveFibonacciCurrency = (activeFibonacciCurrency) => {\n    this.setState({activeFibonacciCurrency})\n  }\n\n  setGranularity = (granularity) => {\n    this.setState({granularity})\n  }\n\n  getProductIds = () => {\n    return this.props.activeAccounts.map(account => {\n      return `${account.currency}-USD`\n    })\n  }\n\n  getFibonacciRetracement = (productId, granularity) => {\n    const config = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      signal: this.state.controller.signal\n    }\n    const requestPath = `${pAPI}/get_fibonacci_retracement?product=${productId}&granularity=${granularity}`\n    fetch(requestPath, config)\n    .then(r => r.json())\n    .then(fibonacciRetracement => {\n      this.setState({\n        fibonacciRetracement\n      })\n    }).catch(e => {\n      console.warn(`There was an error: ${e}`)\n    })\n  }\n\n  getBands = (productId, granularity) => {\n    const config = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      signal: this.state.controller.signal\n    }\n    const requestPath = `${pAPI}/get_bands?product=${productId}&granularity=${granularity}`\n    fetch(requestPath, config)\n    .then(r => r.json())\n    .then(bands => {\n      this.setState({\n        bands: {...this.state.bands, [productId]: bands}\n      })\n    }).catch(e => {\n      console.warn(`There was an error: ${e}`)\n    })\n  }\n\n  // 86400 (1day), 21600 (6hours), 3600(1hr)\n  getAllBands = () => {\n    return this.getProductIds().map(id => {\n      return this.getBands(id, this.state.granularity)\n    })\n  }\n\n  scrollPage = () => {\n    const { activeSection } = this.props\n    if (activeSection === 'b') {\n      this.bollRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      })\n    }\n    if (activeSection === 'f') {\n      this.fibRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      })\n    }\n    if (activeSection === 'm') {\n      this.avgRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end'\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className='algorithms-container'>\n        <div className='bollinger-bands' ref={this.bollRef}>\n          <Bands\n            bands={this.state.bands}\n            granularity={this.state.granularity}\n            setGranularity={this.setGranularity}>\n          </Bands>\n        </div>\n        <div className='fibonacci-retracement' ref={this.fibRef}>\n          <Fibonacci\n            fibonacci={this.state.fibonacciRetracement}\n            activeAccounts={this.props.activeAccounts}\n            activeFibonacciCurrency={this.state.activeFibonacciCurrency}\n            setActiveFibonacciCurrency={this.setActiveFibonacciCurrency}>\n          </Fibonacci>\n        </div>\n        <div className='moving-averages' ref={this.avgRef}>\n          <MovingAverages></MovingAverages>\n        </div>\n      </div>\n    )\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState){\n    if (this.state.granularity !== prevState.granularity) {\n      const {granularity, activeFibonacciCurrency} = this.state\n      this.getAllBands()\n      this.getFibonacciRetracement(activeFibonacciCurrency, granularity)\n      return null\n    }\n    if (this.state.activeFibonacciCurrency !== prevState.activeFibonacciCurrency) {\n      const {granularity, activeFibonacciCurrency} = this.state\n      this.getFibonacciRetracement(activeFibonacciCurrency, granularity)\n      return null\n    } else {\n      return null\n    }\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  componentDidMount() {\n    this.scrollPage()\n\n    const {granularity, activeFibonacciCurrency} = this.state\n    this.getAllBands()\n    this.getFibonacciRetracement(activeFibonacciCurrency, granularity)\n\n    const ws = new WebSocket(websocketAPI)\n    this.setState({socket: ws}, () => {\n\n      // eslint-disable-next-line\n      this.state.socket.onopen = () => {\n        const subscribe = {\n          \"type\": \"subscribe\",\n          \"product_ids\": this.getProductIds(),\n          \"channels\": [\n            {\n              \"name\": \"ticker\",\n              \"product_ids\": this.getProductIds()\n            }\n          ]\n        }\n        this.state.socket.send(JSON.stringify(subscribe))\n      }\n\n      // eslint-disable-next-line\n      this.state.socket.onmessage = (message) => {\n        try {\n          const response = JSON.parse(message.data)\n          if (response.type === 'ticker') {\n            return this.getProductIds().map(id => {\n              if (response.product_id === id) {\n                return this.setState({\n                  prices: {...this.state.prices, [id]: response.price}\n                })\n              } else return null\n            })\n          }\n        } catch (e) {\n          console.log('Not valid JSON: ', message.data);\n          return;\n        }\n      }\n\n      // eslint-disable-next-line\n      this.state.socket.onerror = (error) => {\n        console.warn(\"There was an error: \", error);\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.socket.close()\n    this.state.controller.abort()\n  }\n\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function Toggle({\n  type,\n  buy=null,\n  toggleBuy=null,\n  marketOrder=null,\n  toggleMarketOrder=null,\n  setMessage,\n}) {\n\n  const handleToggle = () => {\n    if (type === 'action') toggleBuy(!buy)\n    if (type === 'order') {\n      setMessage('')\n      toggleMarketOrder(!marketOrder)\n    }\n  }\n\n  const resolveFalseLabel = () => {\n    if (type === 'action') {\n      return \"Buy\"\n    }\n    if (type === 'order') {\n      return \"Market\"\n    }\n  }\n\n  const resolveTrueLabel = () => {\n    if (type === 'action') {\n      return \"Sell\"\n    }\n    if (type === 'order') {\n      return \"Limit\"\n    }\n  }\n\n  const resolveValue = () => {\n    if (type === 'action') {\n      return buy\n    }\n    if (type === 'order') {\n      return marketOrder\n    }\n  }\n\n  const resolveFalseStyle = () => {\n    if (buy === false || marketOrder === false) {\n      return '#0B47E4'\n    } else {\n      return ''\n    }\n  }\n\n  const resolveTrueStyle = () => {\n    if (buy === true || marketOrder === true) {\n      return '#0B47E4'\n    } else {\n      return ''\n    }\n  }\n\n  return (\n    <Typography component=\"div\">\n      <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n        <Grid item className='switch-labels'\n          style={{color: resolveFalseStyle()}}>\n          {resolveFalseLabel()}\n        </Grid>\n          <Grid item>\n            <Switch\n              checked={resolveValue()}\n              onChange={handleToggle}\n              color='default'>\n            </Switch>\n          </Grid>\n        <Grid item className='switch-labels'\n          style={{color: resolveTrueStyle()}}>\n          {resolveTrueLabel()}\n        </Grid>\n      </Grid>\n    </Typography>\n  )\n\n}\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n/*\n* Arguments for market order:\n* side, product_id funds\n*/\n\nconst oAPI = \"https://coinbase-algo-backend.herokuapp.com/c_orders/market_order\"\n\nexport default function MarketOrder({ modal, market, action, activeAccounts, allAccounts=[], setMessage, orders, setOrders}) {\n\n  const [productId, setProductId] = React.useState('')\n  const [funds, setFunds] = React.useState(1)\n\n  const [intendToOrder, setIntendToOrder] = React.useState(false)\n  const [pin, setPin] = React.useState('')\n\n  const resolveSide = () => {\n    if (!action) {\n      return \"buy\"\n    } else {\n      return \"sell\"\n    }\n  }\n\n  const renderMenuItems =  () => {\n    // true is sell\n    if (action === true) {\n      return activeAccounts.map((account, index) => {\n        if (account.currency !== 'USDC' && account.currency !== 'USD') {\n          return (\n            <MenuItem key={index}\n              value={`${account.currency}-USD`}>\n              {account.currency}\n            </MenuItem>\n          )\n        } else return null\n      })\n    } else { // false is buy\n      return allAccounts.map((account, index) => {\n        if (account.currency !== 'USDC' && account.currency !== 'USD') {\n          return (\n            <MenuItem key={index}\n              value={`${account.currency}-USD`}>\n              {account.currency}\n            </MenuItem>\n          )\n        } else return null\n      })\n    }\n  }\n\n  const handleChange = (e) => {\n    setMessage(null)\n    setProductId(`${e.target.value}`)\n  }\n\n  const handleFundsChange = (e) => {\n    if (Math.sign(e.target.value) === -1) {\n      setMessage('Funds must be positive')\n      setFunds(-e.target.value)\n    } else if (Math.sign(e.target.value) === 1) {\n      setMessage('')\n      setFunds(e.target.value)\n    } else if(e.target.value.toString().includes('-') || isNaN(e.target.value) === true) {\n      setMessage('Please enter a valid number value for funds')\n      setFunds(1)\n    } else {\n      setMessage('Funds must be a valid number value greater than 0')\n      setFunds(1)\n    }\n  }\n\n  const handleOrder = () => {\n    if (productId === '') {\n      setMessage('Please choose a product from the dropdown')\n      setPin('')\n      return null\n    } else {\n      const config = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accepts\": \"application/json\",\n        },\n        body: JSON.stringify({\n          side: resolveSide(),\n          productId,\n          funds,\n          pin\n        })\n      }\n      fetch(oAPI, config)\n      .then(r => r.json())\n      .then(data => {\n        if (data && data.message) {\n          setMessage(data.message)\n          setPin('')\n        } else if (data) {\n          setMessage(`${data.side.toUpperCase()} order for $${data.funds} of ${data.product_id} placed successfully`)\n          setFunds('')\n          setPin('')\n          setIntendToOrder(false)\n        } else {\n          setMessage('Something went wrong')\n        }\n      })\n    }\n\n  }\n\n  const handleIntendToOrder = () => {\n    setIntendToOrder(true)\n  }\n\n  const handlePinInput = (e) => {\n    setMessage('')\n    setPin(e.target.value)\n  }\n\n  const renderPinInput = () => {\n    if (intendToOrder) {\n      return (\n        <>\n          <div className='pin-label'>{`Please enter the pin`}</div>\n          <Input style={{width: '100px', height: '20px'}}\n            value={pin}\n            type='password'\n            onChange={handlePinInput}\n          />\n        <Button style={{width: '100%'}}\n            color='secondary'\n            variant='contained'\n            onClick={handleOrder}>\n            {`PLACE ORDER`}\n          </Button>\n        </>\n      )\n    } else {\n      return null\n    }\n  }\n\n  React.useEffect(() => {\n    return function cleanup() {\n      if (modal === false) {\n        setMessage('')\n        setFunds(1)\n        setIntendToOrder(false)\n        setPin('')\n      }\n    }\n  })\n\n  return (\n    <div className='market-order'>\n      <div className='market-title'>{`Market Order`}</div>\n      <div className='input-group' style={{display: 'flex', flexDirection: 'column'}}>\n        <FormControl variant=\"outlined\" style={{width: '200px', margin: '10px 0'}}>\n          <InputLabel id=\"demo-simple-select-outlined-label\">{`Product`}</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={productId}\n            onChange={handleChange}\n            label=\"Age\">\n            {renderMenuItems()}\n          </Select>\n        </FormControl>\n        <TextField\n          type='number'\n          variant='outlined'\n          color='primary'\n          label='Funds ($)'\n          value={funds}\n          onChange={handleFundsChange}>\n        </TextField>\n        <Button\n          style={{marginTop: '10px'}}\n          variant='contained'\n          color='primary'\n          onClick={handleIntendToOrder}>\n          {`ENTER PIN`}\n        </Button>\n      </div>\n      <div className='pin-container'>\n        {renderPinInput()}\n      </div>\n    </div>\n  )\n\n}\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\n\n/*\n* Arguments for limit order:\n* side, product_id, size, price, time_in_force=nil, cancel_after=nil\n*/\n\nconst oAPI = \"https://coinbase-algo-backend.herokuapp.com/c_orders/limit_order\"\n\nexport default function LimitOrder({ modal, buy, action, activeAccounts, allAccounts, setMessage, orders, setOrders }) {\n\n  const [productId, setProductId] = React.useState('')\n  const [size, setSize] = React.useState(1)\n  const [price, setPrice] = React.useState(1)\n\n  const [intendToOrder, setIntendToOrder] = React.useState(false)\n  const [pin, setPin] = React.useState('')\n\n\n  const resolveSide = () => {\n    if (!action) {\n      return \"buy\"\n    } else {\n      return \"sell\"\n    }\n  }\n\n  const handleChange = (e) => {\n    setMessage(null)\n    setProductId(`${e.target.value}`)\n  }\n\n  const handlePriceChange = (e) => {\n    if (Math.sign(e.target.value) === -1) {\n      setMessage('Price must be positive')\n      setPrice(-e.target.value)\n    } else if (Math.sign(e.target.value) === 1) {\n      setMessage('')\n      setPrice(e.target.value)\n    } else if (e.target.value.toString().includes('-') || isNaN(e.target.value) === true) {\n      setMessage('Please enter a valid number value for price')\n      setPrice(1)\n    } else {\n      setMessage('Size must be af valid number value greater than 0')\n      setPrice(1)\n    }\n  }\n\n  const handleSizeChange = (e) => {\n    if (Math.sign(e.target.value) === -1) {\n      setMessage('Size must be positive')\n      setSize(-e.target.value)\n    } else if (Math.sign(e.target.value) === 1) {\n      setMessage('')\n      setSize(e.target.value)\n    } else if (e.target.value.toString().includes('-') || isNaN(e.target.value) === true) {\n      setMessage('Please enter a valid number value for size')\n      setSize(1)\n    } else {\n      setMessage('Size must be a valid number value greater than 0')\n      setSize(1)\n    }\n  }\n\n  const renderMenuItems =  () => {\n    // true is sell\n    if (action === true) {\n      return activeAccounts.map((account, index) => {\n        if (account.currency !== 'USDC' && account.currency !== 'USD') {\n          return (\n            <MenuItem key={index}\n              value={`${account.currency}-USD`}>\n              {account.currency}\n            </MenuItem>\n          )\n        } else return null\n      })\n    } else { // false is buy\n      return allAccounts.map((account, index) => {\n        if (account.currency !== 'USDC' && account.currency !== 'USD') {\n          return (\n            <MenuItem key={index}\n              value={`${account.currency}-USD`}>\n              {account.currency}\n            </MenuItem>\n          )\n        } else return null\n      })\n    }\n  }\n\n  const handleOrder = () => {\n    if (productId === '') {\n      setMessage('Please choose a product from the dropdown')\n      setPin('')\n    } else {\n      const config = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accepts': 'application/json'\n        },\n        body: JSON.stringify({\n          side: resolveSide(),\n          productId,\n          size,\n          price,\n          pin\n        })\n      }\n      fetch(oAPI, config)\n      .then(r => r.json())\n      .then(data => {\n        if (data && data.message) {\n          setMessage(data.message)\n          setPin('')\n        } else {\n          setMessage(`${data.side.toUpperCase()} order at $${price} for ${data.size} of ${data.product_id} placed successfully`)\n          const newOrder = {\n            product_id: productId,\n            type: 'LIMIT',\n            side: resolveSide().toUpperCase(),\n            price,\n            size,\n          }\n          setOrders([...orders, newOrder])\n          setSize(0)\n          setPrice(0)\n          setPin('')\n          setIntendToOrder(false)\n        }\n      })\n    }\n  }\n\n  const handleIntendToOrder = () => {\n    setIntendToOrder(true)\n  }\n\n  const handlePinInput = (e) => {\n    setMessage('')\n    setPin(e.target.value)\n  }\n\n  const renderPinInput = () => {\n    if (intendToOrder) {\n      return (\n        <>\n          <div className='pin-label'>{`Please enter the pin`}</div>\n          <Input style={{width: '100px', height: '20px'}}\n            value={pin}\n            type='password'\n            onChange={handlePinInput}\n          />\n        <Button style={{width: '100%'}}\n            color='secondary'\n            variant='contained'\n            onClick={handleOrder}>\n            {`PLACE ORDER`}\n          </Button>\n        </>\n      )\n    } else return null\n  }\n\n  React.useEffect(() => {\n\n    return function cleanup() {\n      if (modal === false) {\n        setMessage('')\n        setPrice(1)\n        setSize(1)\n      }\n    }\n  })\n\n  return (\n    <div className='limit-order'>\n      <div className='limit-title'>{`Limit Order`}</div>\n      <div className='input-group' style={{display: 'flex', flexDirection: 'column'}}>\n        <FormControl variant=\"outlined\" style={{width: '200px'}}>\n          <InputLabel id=\"demo-simple-select-outlined-label\">{`Product`}</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={productId}\n            onChange={handleChange}\n            label=\"Age\">\n            {renderMenuItems()}\n          </Select>\n        </FormControl>\n        <TextField\n          type='number'\n          variant='outlined'\n          color='primary'\n          label='Size'\n          value={size}\n          onChange={handleSizeChange}>\n        </TextField>\n        <TextField\n          type='number'\n          variant='outlined'\n          color='primary'\n          label='Limit Price ($)'\n          value={price}\n          onChange={handlePriceChange}>\n        </TextField>\n        <Button\n          style={{marginTop: '10px'}}\n          variant='contained'\n          color='primary'\n          onClick={handleIntendToOrder}>\n          {`Enter Pin`}\n        </Button>\n      </div>\n      <div className='pin-container'>\n        {renderPinInput()}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Toggle from './Modal/Toggle.jsx'\nimport MarketOrder from './Modal/MarketOrder.jsx'\nimport LimitOrder from './Modal/LimitOrder.jsx'\n\nconst aAPI = 'https://coinbase-algo-backend.herokuapp.com/c_accounts'\n\nexport default function Modal({ modal, activeAccounts, orders, setOrders }) {\n\n  const [buy, toggleBuy] = React.useState(false)\n  const [marketOrder, toggleMarketOrder] = React.useState(false)\n  const [allAccounts, setAllAccounts] = React.useState([])\n\n  const [message, setMessage] = React.useState(null)\n\n  const getAllAccounts = () => {\n    const config = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      }\n    }\n    fetch(aAPI, config)\n    .then(r => r.json())\n    .then(data => {\n      setAllAccounts(data)\n    })\n  }\n\n  const renderMain = () => {\n    if (!marketOrder) {\n      return (\n        <MarketOrder\n          action={buy}\n          activeAccounts={activeAccounts}\n          allAccounts={allAccounts}\n          setMessage={setMessage}\n          orders={orders}\n          setOrders={setOrders}\n          modal={modal}\n        />\n      )\n    } else {\n      return (\n        <LimitOrder\n          action={buy}\n          activeAccounts={activeAccounts}\n          allAccounts={allAccounts}\n          setMessage={setMessage}\n          orders={orders}\n          setOrders={setOrders}\n          modal={modal}\n        />\n      )\n    }\n  }\n\n  const renderMessage = () => {\n    if (message) {\n      return (\n        <h4>{message}</h4>\n      )\n    } else {\n      return\n    }\n  }\n\n  React.useEffect(() => {\n    if (allAccounts.length === 0) {\n      getAllAccounts()\n    }\n\n  })\n\n  return (\n    <div className='modal-content'>\n      <div className='modal-title'>{`Place an Order`}</div>\n      <div className='switch-group'>\n        <Toggle\n          type='action'\n          buy={buy}\n          toggleBuy={toggleBuy}\n        />\n        <Toggle\n          type='order'\n          marketOrder={marketOrder}\n          toggleMarketOrder={toggleMarketOrder}\n          setMessage={setMessage}\n        />\n      </div>\n        <div className='order-container'>\n          {renderMain()}\n        </div>\n        <div className='message-container'>\n          {renderMessage()}\n        </div>\n    </div>\n  )\n}\n","import  React from 'react'\n\nimport MainNavBar from './MainNavBar.jsx'\n\nimport Home from './Main/Home.jsx'\nimport Portfolio from './Main/Portfolio.jsx'\nimport Prices from './Main/Prices.jsx'\nimport Algorithms from './Main/Algorithms.jsx'\nimport Modal from './Modal.jsx'\n\nconst aAPI = 'https://coinbase-algo-backend.herokuapp.com/c_accounts'\nconst oAPI = 'https://coinbase-algo-backend.herokuapp.com/c_orders'\n\nexport default function MainContainer({ setActivePage, activePage, activeSection }) {\n\n  const [modal, setModal] = React.useState(false)\n  const [activeAccounts, setActiveAccounts] = React.useState([])\n  const [orders, setOrders] = React.useState([])\n\n  React.useEffect(() => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\",\n      }\n    }\n    fetch(aAPI, config)\n      .then(r => r.json())\n      .then(accounts => {\n        if (!accounts) return\n        const activeAccounts = accounts.filter((account) => {\n          return account.balance > 0\n        })\n        setActiveAccounts(activeAccounts)\n      }).catch(e => {\n        console.warn(`There was an error: ${e}`)\n      })\n      fetch(oAPI, config)\n        .then(r => r.json())\n        .then(orders => {\n          if (!orders) return\n          setOrders(orders)\n        }).catch(e => {\n          console.warn(`There was an error: ${e}`)\n        })\n    },[setActiveAccounts, setOrders])\n\n  const renderActivePage = () => {\n    switch(activePage) {\n      case 'home':\n        return (\n          <Home\n            setActivePage={setActivePage}\n            activeAccounts={activeAccounts}\n            orders={orders}\n            setOrders={setOrders}>\n          </Home>\n        )\n      case 'portfolio':\n        return (\n          <Portfolio\n            activeAccounts ={activeAccounts}>\n          </Portfolio>\n        )\n      case 'prices':\n        return (\n          <Prices\n            activeAccounts={activeAccounts}>\n          </Prices>\n        )\n      case 'algorithms':\n        return (\n          <Algorithms\n            activeAccounts={activeAccounts}\n            activeSection={activeSection}>\n          </Algorithms>\n        )\n      default:\n        return (\n          <Home\n            setActivePage={setActivePage}\n            activeAccounts={activeAccounts}\n            orders={orders}>\n          </Home>\n        )\n    }\n  }\n\n  const mainClass = () => modal ? 'main-container blur' : 'main-container'\n  const modalClass = () => modal ? 'modal-show' : 'modal-hide'\n\n  const activateModal = () => { if (!modal) setModal(true) }\n  const deactivateModal = () => { if (modal) setModal(false) }\n\n  return (\n    <>\n    <div\n      className={mainClass()}\n      onClick={deactivateModal}>\n      <div className='main-page-menu'>\n        <MainNavBar\n          activePage={activePage}\n          activateModal={activateModal}>\n        </MainNavBar>\n      </div>\n      <div className='active-page-container'>\n        {renderActivePage()}\n      </div>\n    </div>\n    <div className={modalClass()}>\n      <Modal\n        modal={modal}\n        activeAccounts={activeAccounts}\n        orders={orders}\n        setOrders={setOrders}>\n      </Modal>\n    </div>\n    </>\n  )\n}\n","import React from 'react'\nimport './App.scss';\n\nimport SideMenuContainer from './components/SideMenuContainer.jsx'\nimport MainContainer from './components/MainContainer.jsx'\n\nclass App extends React.Component {\n\n  state = {\n    activePage: 'home',\n    activeSection: 'h',\n  }\n\n  setActivePage = (page, section='h') => {\n    this.setState({\n      activePage: page,\n      activeSection: section\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <SideMenuContainer\n          activePage={this.state.activePage}\n          setActivePage={this.setActivePage}>\n        </SideMenuContainer>\n        <MainContainer\n          activePage={this.state.activePage}\n          activeSection={this.state.activeSection}\n          setActivePage={this.setActivePage}>\n        </MainContainer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}